{"version":3,"sources":["components/AddCategory.js","components/Gif.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","props","useState","value","setValue","onSubmit","e","preventDefault","trim","length","setCategories","prev","type","placeholder","onChange","target","Gif","gif","url","title","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","console","log","useFetchGifs","GifExpert","categories","handleClick","filter","onClick","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAACC,GAExB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACyB,IAAxBJ,EAAMK,OAAOC,SACZR,EAAMS,eAAc,SAACC,GAAD,OAAWR,GAAX,mBAAqBQ,OACzCP,EAAS,MAKb,SACG,uBACKQ,KAAK,OACLC,YAAY,eACZV,MAAOA,EACPW,SAlBS,SAACR,GAClBF,EAASE,EAAES,OAAOZ,aCQXa,EAbI,SAAC,GAAwB,IAAD,IAAtBC,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC3B,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAKH,EAAKI,IAAI,MACnB,4BAAIH,Q,uBCLHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbP,EADa,iDACmCQ,UAAUF,GAD7C,8DAGAG,MAAMT,GAHN,cAGbU,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAQ,CACJC,GAAID,EAAKC,GACTf,MAAOc,EAAKd,MACZD,IAAKe,EAAKE,OAAOC,iBAAiBlB,QATvB,kBAaZa,GAbY,4CAAH,sDCEPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAGrB,ECHwB,SAACA,GAEzB,MAA0BtB,mBAAS,CAAC4B,KAAM,GAAIQ,SAAS,IAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAZAC,qBAAW,WACPlB,EAAQC,GAAUkB,MAAM,SAAAX,GACpBY,YAAY,WACRC,QAAQC,IAAId,GACZS,EAAS,CACLV,KAAMC,EACNO,SAAS,MAEd,UAER,CAACd,IAEGe,EDZsBO,CAAatB,GAA9BO,EAAZ,EAAOD,KAAWQ,EAAlB,EAAkBA,QAMlB,OADAM,QAAQC,IAAIP,EAASd,GAEjB,sBAAKJ,UAAU,OAAf,UACI,oBAAIA,UAAU,+CAAd,SAA8DI,IAC7Dc,GAAW,mBAAGlB,UAAU,qDAAb,yBACZ,qBAAKA,UAAU,WAAf,SAPGW,EAAKC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAmBhB,IAAKgB,GAAdA,EAAKC,aEuClCa,EA7CG,WAEd,MAAoC7C,mBAAS,IAA7C,mBAAO8C,EAAP,KAAmBtC,EAAnB,KAEMuC,EAAc,SAAC3C,GACjB,IAAOH,EAASG,EAAES,OAAXZ,MACPyC,QAAQC,IAAI1C,GACZO,GAAc,SAACC,GAAD,OAAUA,EAAKuC,QAAO,SAACjB,GACjC,OAAOA,IAAS9B,SAsBxB,OACI,qCACI,2CACA,uBACA,cAAC,EAAD,CAAaO,cAAeA,IAC5B,qBAAKU,UAAU,aAAf,SAtBG4B,EAAWhB,KAAI,SAACC,GACnB,OACI,yBACIb,UAAU,OAEVjB,MAAO8B,EACPkB,QAASF,EAJb,UAI2BhB,EAAK,uCAFvBA,QAqBb,8BAbGe,EAAWhB,KAAI,SAACC,GACnB,OAAO,cAAC,EAAD,CAAoBT,SAAUS,GAAhBA,Y,MCxBjCmB,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.d111ff8b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(value.trim().length !== 0){\r\n            props.setCategories((prev) => [value, ...prev]);\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n                type=\"text\"\r\n                placeholder=\"Add Category\"\r\n                value={value}\r\n                onChange={handleChange}\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Gif = ({gif:{url, title}}) => {\r\n    return (\r\n        <div className='gif animate__animated animate__bounce'>\r\n            <img src={url} alt=\"#\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGif.propTypes = {\r\n    gif: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gif;\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=4&api_key=QnjApP3YIf3tB5xEIs9qPsxuvHm1ia4P`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((item) => {\r\n        return ({\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.images.downsized_medium.url\r\n        });\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport Gif from './Gif'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n\r\n    const {data:gifs, loading} = useFetchGifs(category);\r\n\r\n    const getCardGifs = () => {\r\n        return gifs.map((item) => <Gif key={item.id} gif={item} />);\r\n    }\r\n    console.log(loading, category);\r\n    return (\r\n        <div className='grid'>\r\n            <h3 className='animate__animated animate__fadeInBottomRight'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash animate__delay-1s'>Cargando...</p>}\r\n            <div className='category'>{getCardGifs()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import  {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({data: [], loading: true});\r\n    useEffect( () => {\r\n        getGifs(category).then( gifs => {\r\n            setTimeout( () => {\r\n                console.log(gifs)\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            }, 2000)\r\n        })\r\n    }, [category] );\r\n        \r\n    return state;\r\n}","import React,{ useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpert = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const handleClick = (e) => {\r\n        const {value} = e.target;\r\n        console.log(value)\r\n        setCategories((prev) => prev.filter((item) => {\r\n            return item !== value \r\n        }))\r\n    }\r\n\r\n    const showCategories = () => {\r\n        return categories.map((item) => {\r\n            return (\r\n                <button \r\n                    className='item' \r\n                    key={item}\r\n                    value={item}\r\n                    onClick={handleClick}>{item}<span>X</span></button>\r\n            );\r\n        });\r\n    };\r\n\r\n    const showGrid = () => {\r\n        return categories.map((item) => {\r\n            return <GifGrid key={item} category={item}/>;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpert</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <div className=\"categories\">\r\n                {showCategories()}\r\n            </div>\r\n            <div>\r\n                {showGrid()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpert;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert'\n\nimport './index.css';\n\nReactDOM.render(<GifExpert />, document.getElementById('root'));\n\n"],"sourceRoot":""}